<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.course.mapper.UserStudyMapper" >
  <resultMap id="BaseResultMap" type="com.study.course.entity.UserStudy" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_id, user_id, start_time
  </sql>


  <select id="getAllUserStudy" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user_study
  </select>

  <select id="getUserStudiesByPage" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM user_study WHERE name like concat('%',#{key},'%')
    <if test="start!=null and size!=null">
      order by id limit #{start},#{size}
    </if>
  </select>

  <select id="getCountByKey" resultType="Long">
    SELECT  count(*)  FROM user_study WHERE name like concat('%',#{key},'%');
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_study
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="getAllUserStudiesOfCurrentUser" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user_study
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_study
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.study.course.entity.UserStudy" >
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select UUID()
    </selectKey>
    insert into user_study (id, course_id, user_id,
    start_time)
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
    #{startTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.study.course.entity.UserStudy" >
    insert into user_study
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.course.entity.UserStudy" >
    update user_study
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.course.entity.UserStudy" >
    update user_study
    set course_id = #{courseId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>