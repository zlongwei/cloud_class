<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.order.mapper.OrderMapper" >

  <resultMap id="BaseResultMap" type="com.study.order.bean.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="DOUBLE" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, order_time, phone, state, total, user_id, course_id
  </sql>


  <select id="getAllOrder" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from course_order
  </select>


  <select id="getOrderByUserId" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from course_order where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="getOrdersByPage" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM course_order
    <if test="key!=null and key!=''">
      WHERE phone like concat('%',#{key},'%')
    </if>
    <if test="start!=null and size!=null">
      order by id limit #{start},#{size}
    </if>
  </select>

  <select id="getCountByKey" resultType="Long">
    SELECT  count(*)  FROM course_order
    <if test="key!=null and key!=''">
      WHERE phone like concat('%',#{key},'%')
    </if>
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from course_order
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_order
    where id = #{id}
  </delete>

  <insert id="insert" parameterType="com.study.order.bean.Order" >
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select UUID()
    </selectKey>
    insert into course_order (id, order_time, phone,
    state, total, user_id,
    course_id)
    values (#{id,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR},
    #{state,jdbcType=INTEGER}, #{total,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER},
    #{courseId,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.study.order.bean.Order" >
    insert into course_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.study.order.bean.Order" >
    update course_order
    <set >
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId},
      </if>
    </set>
    where id = #{id}
  </update>

</mapper>